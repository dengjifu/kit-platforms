<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>kit-platforms</groupId>
    <artifactId>com.kit.platforms</artifactId>
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>
    <modules>
        <module>platforms</module>
        <module>kubernetes-client</module>
        <module>kubernetes-examples</module>
    </modules>

    <properties>
        <java.version>1.8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <mockwebserver.version>0.0.4</mockwebserver.version>
        <okhttp.version>3.4.1</okhttp.version>
        <okhttp.bundle.version>3.4.1_1</okhttp.bundle.version>
        <okio.version>1.9.0</okio.version>
        <okio.bundle.version>1.9.0_1</okio.bundle.version>
        <easymock.version>3.4</easymock.version>
        <felix.scr.annotations.version>1.9.8</felix.scr.annotations.version>
        <generex.version>1.0.1</generex.version>
        <generex.bundle.version>1.0.1_1</generex.bundle.version>
        <automaton.version>1.11-8</automaton.version>
        <automaton.bundle.version>1.11-8_1</automaton.bundle.version>
        <jackson.version>2.7.5</jackson.version>
        <junit.version>4.12</junit.version>
        <kubernetes.model.version>1.0.54</kubernetes.model.version>
        <kubernetes.client.version>1.4.14</kubernetes.client.version>
        <kubernetes.openshift.version>1.4.14</kubernetes.openshift.version>
        <log4j.version>2.5</log4j.version>
        <zjsonpatch.version>0.2.3</zjsonpatch.version>

        <slf4j.version>1.7.13</slf4j.version>
        <snakeyaml.version>1.16</snakeyaml.version>

        <scr.annotations.version>1.9.12</scr.annotations.version>
        <sundrio.version>0.3.4</sundrio.version>

        <maven.bundle.plugin.version>2.5.4</maven.bundle.plugin.version>
        <maven.buildhelper.plugin.version>1.10</maven.buildhelper.plugin.version>
        <maven.jar.plugin.version>3.0.1</maven.jar.plugin.version>
        <maven.resources.plugin.version>3.0.1</maven.resources.plugin.version>
        <maven.surefire.plugin.version>2.19.1</maven.surefire.plugin.version>
        <maven.scr.plugin.version>1.22.0</maven.scr.plugin.version>

        <maven.compiler.source>1.7</maven.compiler.source>
        <maven.compiler.target>1.7</maven.compiler.target>

        <exec.master>https://localhost:8443</exec.master>

        <javadoc.include.deps>false</javadoc.include.deps>
        <javadoc.source.includes />
        <javadoc.package.excludes />

        <osgi.import />
        <osgi.export />
        <osgi.private />
        <osgi.dynamic.import />
        <osgi.bundles />
        <osgi.activator />
        <osgi.export.service />
        <docker.plugin.version>0.4.13</docker.plugin.version>
        <docker.image.prefix>kit-platforms</docker.image.prefix>
    </properties>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.3.1.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>





<!--
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.3.5.RELEASE</version>
    </parent>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>Brixton.SR4</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.8</java.version>
        <docker.image.prefix>kit-microservice</docker.image.prefix>
        <docker.plugin.version>0.3.258</docker.plugin.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>


        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-eureka</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-config</artifactId>
        </dependency>
    </dependencies>



    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>${docker.plugin.version}</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <dockerHost>http://88.128.22.119:2375</dockerHost>
                    <imageName>${docker.image.prefix}/${project.artifactId}</imageName>
                    <dockerDirectory>${project.basedir}/src/main/docker</dockerDirectory>
                    <resources>
                        <resource>
                            <targetPath>/</targetPath>
                            <directory>${project.build.directory}</directory>
                            <include>${project.build.finalName}.jar</include>
                        </resource>
                    </resources>
                </configuration>
            </plugin>
        </plugins>
    </build>
-->
</project>